/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Telas;

import com.FireWatch.DAO.ConnectionFactory;
import com.FireWatch.classes.Usuario;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class ListagemAdm extends javax.swing.JFrame {

    /**
     * Creates new form ListagemAdm
     */
    public ListagemAdm() {
        initComponents();
                String usuario = txtusuario.getText();
        String sql = "";
        
        DefaultTableModel model = new DefaultTableModel
                (new String[]{"ID", "Nome", "Usuario", "Telefone", "Estado", "Cidade", "Senha"},0);
        
        if ("".equals(usuario))
            sql = "SELECT * FROM tb_pessoas";
        else 
            sql = "SELECT * FROM tb_pessoas WHERE usuario = ?";
        
        ConnectionFactory cf = new ConnectionFactory();
        
        try(Connection conn = cf.obtemConexao();
                PreparedStatement ps = conn.prepareStatement(sql);) {
            if (!"".equals(usuario)) {
                ps.setString(1, usuario);
            }
            ResultSet rs = ps.executeQuery();
            
            while (rs.next()) {
                int txtcodigo = rs.getInt("codusu");
                String txtnome = rs.getString("nomeusu");
                String txtusu = rs.getString("usuario");
                String txtfone = rs.getString("foneusu");
                String txtestado = rs.getString("estadousu");
                String txtcidade = rs.getString("cidadeusu");
                String txtsenha = rs.getString("senhausu");
                
                model.addRow(new Object[]{txtcodigo, txtnome, txtusu, txtfone, txtestado, txtcidade, txtsenha});
                
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Não localizado!");
        }
        
        tabela.setModel(model);
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtusuario = new javax.swing.JTextField();
        listarBt = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        botaoDeletar = new javax.swing.JButton();
        Home = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(975, 630));
        setResizable(false);
        getContentPane().setLayout(null);

        txtusuario.setBackground(new java.awt.Color(244, 244, 244));
        txtusuario.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        txtusuario.setBorder(null);
        txtusuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtusuarioActionPerformed(evt);
            }
        });
        getContentPane().add(txtusuario);
        txtusuario.setBounds(70, 120, 600, 30);

        listarBt.setOpaque(false);
        listarBt.setContentAreaFilled(false);
        listarBt.setBorderPainted(false);
        listarBt.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        listarBt.setText("LISTAR");
        listarBt.setForeground(new java.awt.Color(221, 221, 221));

        listarBt.addMouseListener(new java.awt.event.MouseAdapter() {
            private javax.swing.Timer timer;

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                if (timer !=null) {
                    timer.stop();
                }

                timer = new javax.swing.Timer(18, e -> {
                    int r = Math.max(123, listarBt.getForeground().getRed() - 10);
                    int g = Math.max(0, listarBt.getForeground().getGreen() - 10);
                    int b = Math.max(0, listarBt.getForeground().getBlue() - 10);
                    listarBt.setForeground(new java.awt.Color(r, g, b));
                    if (r <= 123 && g <= 0 && b <= 0) {
                        timer.stop();
                    }
                });
                timer.start();
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {

                if (timer != null) {
                    timer.stop();
                }
                // Timer para a animação de volta à cor original
                timer = new javax.swing.Timer(18, e -> {
                    int r = Math.min(255, listarBt.getForeground().getRed() + 10);
                    int g = Math.min(255, listarBt.getForeground().getGreen() + 10);
                    int b = Math.min(255, listarBt.getForeground().getBlue() + 10);
                    listarBt.setForeground(new java.awt.Color(r, g, b));
                    if (r >= 221 && g >= 221 && b >= 221) {
                        timer.stop();
                    }
                });
                timer.start();
            }
        });
        listarBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarBtActionPerformed(evt);
            }
        });
        getContentPane().add(listarBt);
        listarBt.setBounds(720, 108, 170, 50);

        tabela.setForeground(new java.awt.Color(0, 0, 0));
        tabela.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Usuario", "Telefone", "Estado", "Cidade", "Senha"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabela.setOpaque(false);
        jScrollPane1.setViewportView(tabela);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(60, 170, 840, 360);

        botaoDeletar.setOpaque(false);
        botaoDeletar.setContentAreaFilled(false);
        botaoDeletar.setBorderPainted(false);
        botaoDeletar.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        botaoDeletar.setText("DELETAR");
        botaoDeletar.setForeground(new java.awt.Color(221, 221, 221));

        botaoDeletar.addMouseListener(new java.awt.event.MouseAdapter() {
            private javax.swing.Timer timer;

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                if (timer !=null) {
                    timer.stop();
                }

                timer = new javax.swing.Timer(18, e -> {
                    int r = Math.max(123, botaoDeletar.getForeground().getRed() - 10);
                    int g = Math.max(0, botaoDeletar.getForeground().getGreen() - 10);
                    int b = Math.max(0, botaoDeletar.getForeground().getBlue() - 10);
                    botaoDeletar.setForeground(new java.awt.Color(r, g, b));
                    if (r <= 123 && g <= 0 && b <= 0) {
                        timer.stop();
                    }
                });
                timer.start();
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {

                if (timer != null) {
                    timer.stop();
                }
                // Timer para a animação de volta à cor original
                timer = new javax.swing.Timer(18, e -> {
                    int r = Math.min(255, botaoDeletar.getForeground().getRed() + 10);
                    int g = Math.min(255, botaoDeletar.getForeground().getGreen() + 10);
                    int b = Math.min(255, botaoDeletar.getForeground().getBlue() + 10);
                    botaoDeletar.setForeground(new java.awt.Color(r, g, b));
                    if (r >= 221 && g >= 221 && b >= 221) {
                        timer.stop();
                    }
                });
                timer.start();
            }
        });
        botaoDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDeletarActionPerformed(evt);
            }
        });
        getContentPane().add(botaoDeletar);
        botaoDeletar.setBounds(672, 538, 220, 50);

        Home.setOpaque(false); // botão transparente
        Home.setContentAreaFilled(false); // Remove a cor de fundo
        Home.setBorderPainted(false); // Remove a borda
        Home.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Home.setText("SAIR");
        Home.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Home.setForeground(new java.awt.Color(221, 221, 221));
        Home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeActionPerformed(evt);
            }
        });
        Home.setForeground(new java.awt.Color(221, 221, 221));

        Home.addMouseListener(new java.awt.event.MouseAdapter() {
            private javax.swing.Timer timer; //animação

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                if (timer !=null) {
                    timer.stop();
                }
                //mudança de cor
                timer = new javax.swing.Timer(18, e -> { //velocidade
                    int r = Math.max(123, Home.getForeground().getRed() - 10);
                    int g = Math.max(0, Home.getForeground().getGreen() - 10);
                    int b = Math.max(0, Home.getForeground().getBlue() - 10);
                    Home.setForeground(new java.awt.Color(r, g, b));
                    if (r <= 123 && g <= 0 && b <= 0) {
                        timer.stop(); // Para o timer quando a cor preta for atingida
                    }
                });
                timer.start(); // Começa a animação
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {

                if (timer != null) {
                    timer.stop();
                }
                // Timer para a animação de volta à cor original
                timer = new javax.swing.Timer(18, e -> {
                    int r = Math.min(221, Home.getForeground().getRed() + 10);
                    int g = Math.min(221, Home.getForeground().getGreen() + 10);
                    int b = Math.min(221, Home.getForeground().getBlue() + 10);
                    Home.setForeground(new java.awt.Color(r, g, b));
                    if (r >= 221 && g >= 221 && b >= 221) {
                        timer.stop();
                    }
                });
                timer.start();
            }
        });
        getContentPane().add(Home);
        Home.setBounds(10, 10, 120, 44);

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\OneDrive\\Documentos\\NetBeansProjects\\A3_Testes\\src\\main\\resources\\images\\TelaTela.png")); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 1050, 600);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtusuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtusuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtusuarioActionPerformed

    private void listarBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarBtActionPerformed
        // TODO add your handling code here:
        
        String usuario = txtusuario.getText();
        String sql = "";
        
        DefaultTableModel model = new DefaultTableModel
                (new String[]{"ID", "Nome", "Usuario", "Telefone", "Estado", "Cidade", "Senha"},0);
        
        if ("".equals(usuario))
            sql = "SELECT * FROM tb_pessoas";
        else 
            sql = "SELECT * FROM tb_pessoas WHERE usuario LIKE ? OR codusu LIKE ? OR nomeusu LIKE ? OR estadousu LIKE ? OR cidadeusu LIKE ?";
        
        ConnectionFactory cf = new ConnectionFactory();
        
        try(Connection conn = cf.obtemConexao();
                PreparedStatement ps = conn.prepareStatement(sql);) {
            if (!"".equals(usuario)) {
                String procurar = "%" + usuario + "%";
                ps.setString(1, procurar);
                ps.setString(2, procurar);
                ps.setString(3, procurar);
                ps.setString(4, procurar);
                ps.setString(5, procurar);
            }
            ResultSet rs = ps.executeQuery();
            
            while (rs.next()) {
                int txtcodigo = rs.getInt("codusu");
                String txtnome = rs.getString("nomeusu");
                String txtusu = rs.getString("usuario");
                String txtfone = rs.getString("foneusu");
                String txtestado = rs.getString("estadousu");
                String txtcidade = rs.getString("cidadeusu");
                String txtsenha = rs.getString("senhausu");
                
                model.addRow(new Object[]{txtcodigo, txtnome, txtusu, txtfone, txtestado, txtcidade, txtsenha});
                
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Não localizado!");
        }
        
        tabela.setModel(model);
    }//GEN-LAST:event_listarBtActionPerformed

    private void botaoDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDeletarActionPerformed
        // TODO add your handling code here:
        
        int x = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja deletar esse usuário?", "deletar", JOptionPane.YES_NO_OPTION);
        
        if (x==0) {
            int linhaSelecionada = tabela.getSelectedRow(); // Obter a linha selecionada
            if (linhaSelecionada != -1) { // Verifica se há uma linha selecionada
                String nomeUsuario = tabela.getValueAt(linhaSelecionada, 2).toString(); // Obter o valor da 3ª coluna
                Usuario usuario = new Usuario();
                usuario.setUsuario(nomeUsuario);
                try {
                    usuario.DeletarUsu();
                } catch (SQLException ex) {
                    Logger.getLogger(ListagemAdm.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(null, "Usuário " + nomeUsuario + " deletado com sucesso!");
            } else {
                JOptionPane.showMessageDialog(null, "Por favor, selecione um usuário na tabela.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            
        }    
        

    }//GEN-LAST:event_botaoDeletarActionPerformed

    private void HomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeActionPerformed
        // TODO add your handling code here:
        int x = this.getLocation().x;
        int y = this.getLocation().y;

        TelaAdm ta = new TelaAdm();
        ta.setLocation(x,y);
        ta.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_HomeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListagemAdm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListagemAdm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListagemAdm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListagemAdm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListagemAdm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Home;
    private javax.swing.JButton botaoDeletar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton listarBt;
    private javax.swing.JTable tabela;
    private javax.swing.JTextField txtusuario;
    // End of variables declaration//GEN-END:variables
}
