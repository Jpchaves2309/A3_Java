/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Telas;

import com.FireWatch.DAO.ConnectionFactory;
import com.FireWatch.classes.Denuncias;
import java.awt.Color;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author User
 */
public class Denuncia extends javax.swing.JFrame {

    /**
     * Creates new form Denuncia
     */
    public Denuncia() {
        initComponents();
        
        try {
        // Cria a máscara para o formato (xx)xxxx-xxxx
        MaskFormatter mascara = new MaskFormatter("##/##/####");
        mascara.setPlaceholderCharacter('_');  // Preenche com _ os campos vazios

        // Aplica a máscara ao JFormattedTextField
        dataDen.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(mascara));
        
        }catch (Exception e) {
        e.printStackTrace();
        }
        
        try {
        // Cria a máscara para o formato (xx)xxxx-xxxx
        MaskFormatter mascaraHora = new MaskFormatter("##:##");
        mascaraHora.setPlaceholderCharacter('_');  // Preenche com _ os campos vazios

        // Aplica a máscara ao JFormattedTextField
        horaDen.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(mascaraHora));
        
        }catch (Exception e) {
        e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        confirma = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        Denuncia = new javax.swing.JButton();
        Home = new javax.swing.JButton();
        Queimadas = new javax.swing.JButton();
        AboutUs = new javax.swing.JButton();
        Perfil = new javax.swing.JButton();
        Enviar = new javax.swing.JButton();
        enderecoDen = new javax.swing.JTextField();
        cidadeDen = new javax.swing.JTextField();
        gravDen = new javax.swing.JComboBox<>();
        estadoDen = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        horaDen = new javax.swing.JFormattedTextField();
        infoDen = new javax.swing.JButton();
        numeDen = new javax.swing.JTextField();
        dataDen = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        infoPlus = new javax.swing.JButton();
        verdade = new javax.swing.JButton();
        contato = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(970, 635));
        setResizable(false);
        getContentPane().setLayout(null);

        confirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmaActionPerformed(evt);
            }
        });
        getContentPane().add(confirma);
        confirma.setBounds(740, 485, 20, 19);
        getContentPane().add(jCheckBox2);
        jCheckBox2.setBounds(740, 546, 20, 19);

        Denuncia.setOpaque(false); // botão transparente
        Denuncia.setContentAreaFilled(false); // Remove a cor de fundo
        Denuncia.setBorderPainted(false); // Remove a borda
        Denuncia.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Denuncia.setText("DENUNCIA");
        Denuncia.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Denuncia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DenunciaActionPerformed(evt);
            }
        });
        Denuncia.setForeground(new java.awt.Color(221, 221, 221));

        Denuncia.addMouseListener(new java.awt.event.MouseAdapter() {
            private javax.swing.Timer timer; //animação

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                if (timer !=null) {
                    timer.stop();
                }
                //mudança de cor
                timer = new javax.swing.Timer(18, e -> { //velocidade
                    int r = Math.max(0, Denuncia.getForeground().getRed() - 10);
                    int g = Math.max(0, Denuncia.getForeground().getGreen() - 10);
                    int b = Math.max(0, Denuncia.getForeground().getBlue() - 10);
                    Denuncia.setForeground(new java.awt.Color(r, g, b));
                    if (r <= 0 && g <= 0 && b <= 0) {
                        timer.stop(); // Para o timer quando a cor preta for atingida
                    }
                });
                timer.start(); // Começa a animação
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {

                if (timer != null) {
                    timer.stop();
                }
                // Timer para a animação de volta à cor original
                timer = new javax.swing.Timer(18, e -> {
                    int r = Math.min(255, Denuncia.getForeground().getRed() + 10);
                    int g = Math.min(255, Denuncia.getForeground().getGreen() + 10);
                    int b = Math.min(255, Denuncia.getForeground().getBlue() + 10);
                    Denuncia.setForeground(new java.awt.Color(r, g, b));
                    if (r >= 221 && g >= 221 && b >= 221) {
                        timer.stop();
                    }
                });
                timer.start();
            }
        });
        getContentPane().add(Denuncia);
        Denuncia.setBounds(154, 10, 120, 44);

        Home.setOpaque(false); // botão transparente
        Home.setContentAreaFilled(false); // Remove a cor de fundo
        Home.setBorderPainted(false); // Remove a borda
        Home.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Home.setText("HOME");
        Home.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeActionPerformed(evt);
            }
        });
        Home.setForeground(new java.awt.Color(221, 221, 221));

        Home.addMouseListener(new java.awt.event.MouseAdapter() {
            private javax.swing.Timer timer; //animação

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                if (timer !=null) {
                    timer.stop();
                }
                //mudança de cor
                timer = new javax.swing.Timer(18, e -> { //velocidade
                    int r = Math.max(123, Home.getForeground().getRed() - 10);
                    int g = Math.max(0, Home.getForeground().getGreen() - 10);
                    int b = Math.max(0, Home.getForeground().getBlue() - 10);
                    Home.setForeground(new java.awt.Color(r, g, b));
                    if (r <= 123 && g <= 0 && b <= 0) {
                        timer.stop(); // Para o timer quando a cor preta for atingida
                    }
                });
                timer.start(); // Começa a animação
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {

                if (timer != null) {
                    timer.stop();
                }
                // Timer para a animação de volta à cor original
                timer = new javax.swing.Timer(18, e -> {
                    int r = Math.min(255, Home.getForeground().getRed() + 10);
                    int g = Math.min(255, Home.getForeground().getGreen() + 10);
                    int b = Math.min(255, Home.getForeground().getBlue() + 10);
                    Home.setForeground(new java.awt.Color(r, g, b));
                    if (r >= 221 && g >= 221 && b >= 221) {
                        timer.stop();
                    }
                });
                timer.start();
            }
        });
        getContentPane().add(Home);
        Home.setBounds(10, 10, 120, 44);

        Queimadas.setOpaque(false);
        Queimadas.setContentAreaFilled(false);
        Queimadas.setBorderPainted(false);
        Queimadas.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Queimadas.setText("QUEIMADAS");
        Queimadas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Queimadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QueimadasActionPerformed(evt);
            }
        });
        Queimadas.setForeground(new java.awt.Color(221, 221, 221));

        Queimadas.addMouseListener(new java.awt.event.MouseAdapter() {
            private javax.swing.Timer timer;

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                if (timer !=null) {
                    timer.stop();
                }

                timer = new javax.swing.Timer(18, e -> {
                    int r = Math.max(123, Queimadas.getForeground().getRed() - 10);
                    int g = Math.max(0, Queimadas.getForeground().getGreen() - 10);
                    int b = Math.max(0, Queimadas.getForeground().getBlue() - 10);
                    Queimadas.setForeground(new java.awt.Color(r, g, b));
                    if (r <= 123 && g <= 0 && b <= 0) {
                        timer.stop();
                    }
                });
                timer.start();
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {

                if (timer != null) {
                    timer.stop();
                }
                // Timer para a animação de volta à cor original
                timer = new javax.swing.Timer(18, e -> {
                    int r = Math.min(255, Queimadas.getForeground().getRed() + 10);
                    int g = Math.min(255, Queimadas.getForeground().getGreen() + 10);
                    int b = Math.min(255, Queimadas.getForeground().getBlue() + 10);
                    Queimadas.setForeground(new java.awt.Color(r, g, b));
                    if (r >= 221 && g >= 221 && b >= 221) {
                        timer.stop();
                    }
                });
                timer.start();
            }
        });
        getContentPane().add(Queimadas);
        Queimadas.setBounds(297, 10, 120, 44);

        AboutUs.setOpaque(false);
        AboutUs.setContentAreaFilled(false);
        AboutUs.setBorderPainted(false);
        AboutUs.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        AboutUs.setText("SOBRE NÓS");
        AboutUs.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AboutUs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutUsActionPerformed(evt);
            }
        });
        AboutUs.setForeground(new java.awt.Color(221, 221, 221));

        AboutUs.addMouseListener(new java.awt.event.MouseAdapter() {
            private javax.swing.Timer timer;

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                if (timer !=null) {
                    timer.stop();
                }

                timer = new javax.swing.Timer(18, e -> {
                    int r = Math.max(123, AboutUs.getForeground().getRed() - 10);
                    int g = Math.max(0, AboutUs.getForeground().getGreen() - 10);
                    int b = Math.max(0, AboutUs.getForeground().getBlue() - 10);
                    AboutUs.setForeground(new java.awt.Color(r, g, b));
                    if (r <= 123 && g <= 0 && b <= 0) {
                        timer.stop();
                    }
                });
                timer.start();
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {

                if (timer != null) {
                    timer.stop();
                }
                // Timer para a animação de volta à cor original
                timer = new javax.swing.Timer(18, e -> {
                    int r = Math.min(255, AboutUs.getForeground().getRed() + 10);
                    int g = Math.min(255, AboutUs.getForeground().getGreen() + 10);
                    int b = Math.min(255, AboutUs.getForeground().getBlue() + 10);
                    AboutUs.setForeground(new java.awt.Color(r, g, b));
                    if (r >= 221 && g >= 221 && b >= 221) {
                        timer.stop();
                    }
                });
                timer.start();
            }
        });
        getContentPane().add(AboutUs);
        AboutUs.setBounds(442, 10, 120, 44);

        Perfil.setOpaque(false);
        Perfil.setContentAreaFilled(false);
        Perfil.setBorderPainted(false);
        Perfil.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Perfil.setText("PERFIL");
        Perfil.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Perfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PerfilActionPerformed(evt);
            }
        });
        Perfil.setForeground(new java.awt.Color(221, 221, 221));

        Perfil.addMouseListener(new java.awt.event.MouseAdapter() {
            private javax.swing.Timer timer;

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                if (timer !=null) {
                    timer.stop();
                }

                timer = new javax.swing.Timer(18, e -> {
                    int r = Math.max(123, Perfil.getForeground().getRed() - 10);
                    int g = Math.max(0, Perfil.getForeground().getGreen() - 10);
                    int b = Math.max(0, Perfil.getForeground().getBlue() - 10);
                    Perfil.setForeground(new java.awt.Color(r, g, b));
                    if (r <= 123 && g <= 0 && b <= 0) {
                        timer.stop();
                    }
                });
                timer.start();
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {

                if (timer != null) {
                    timer.stop();
                }
                // Timer para a animação de volta à cor original
                timer = new javax.swing.Timer(18, e -> {
                    int r = Math.min(255, Perfil.getForeground().getRed() + 10);
                    int g = Math.min(255, Perfil.getForeground().getGreen() + 10);
                    int b = Math.min(255, Perfil.getForeground().getBlue() + 10);
                    Perfil.setForeground(new java.awt.Color(r, g, b));
                    if (r >= 221 && g >= 221 && b >= 221) {
                        timer.stop();
                    }
                });
                timer.start();
            }
        });
        getContentPane().add(Perfil);
        Perfil.setBounds(587, 10, 120, 44);

        Enviar.setOpaque(false);
        Enviar.setContentAreaFilled(false);
        Enviar.setBorderPainted(false);
        Enviar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Enviar.setForeground(new java.awt.Color(0, 0, 0));

        Enviar.addMouseListener(new java.awt.event.MouseAdapter() {
            private javax.swing.Timer timer;

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                if (timer !=null) {
                    timer.stop();
                }

                timer = new javax.swing.Timer(18, e -> {
                    int r = Math.max(120, Enviar.getForeground().getRed() - 10);
                    int g = Math.max(168, Enviar.getForeground().getGreen() - 10);
                    int b = Math.max(49, Enviar.getForeground().getBlue() - 10);
                    Enviar.setForeground(new java.awt.Color(r, g, b));
                    if (r <= 123 && g <= 169 && b <= 50) {
                        timer.stop();
                    }
                });
                timer.start();
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {

                if (timer != null) {
                    timer.stop();
                }
                // Timer para a animação de volta à cor original
                timer = new javax.swing.Timer(18, e -> {
                    int r = Math.min(0, Enviar.getForeground().getRed() + 10);
                    int g = Math.min(0, Enviar.getForeground().getGreen() + 10);
                    int b = Math.min(0, Enviar.getForeground().getBlue() + 10);
                    Enviar.setForeground(new java.awt.Color(r, g, b));
                    if (r >= 0 && g >= 0 && b >= 0) {
                        timer.stop();
                    }
                });
                timer.start();
            }
        });
        Enviar.setText("ENVIAR");
        Enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnviarActionPerformed(evt);
            }
        });
        getContentPane().add(Enviar);
        Enviar.setBounds(793, 502, 110, 70);

        enderecoDen.setBackground(new java.awt.Color(244, 244, 244));
        enderecoDen.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        enderecoDen.setBorder(null);
        enderecoDen.setOpaque(true);
        getContentPane().add(enderecoDen);
        enderecoDen.setBounds(465, 275, 250, 30);

        cidadeDen.setBackground(new java.awt.Color(244, 244, 244));
        cidadeDen.setHorizontalAlignment(cidadeDen.CENTER);
        cidadeDen.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        cidadeDen.setBorder(null);
        cidadeDen.setOpaque(true);
        getContentPane().add(cidadeDen);
        cidadeDen.setBounds(654, 197, 220, 30);

        gravDen.setBackground(new java.awt.Color(244, 244, 244));
        gravDen.setBackground(new java.awt.Color(0, 0, 0, 0));
        gravDen.setFont(new java.awt.Font("Bahnschrift", 1, 16));
        gravDen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "   Baixa", "   Média", "    Alta", "Extrema", " ", " ", " " }));
        gravDen.setBorder(null);
        getContentPane().add(gravDen);
        gravDen.setBounds(790, 342, 100, 40);

        estadoDen.setBackground(new java.awt.Color(0, 0, 0, 0));
        estadoDen.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        estadoDen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "     AC", "     AL", "     AP", "     AM", "     BA", "     CE", "     DF", "     ES", "     GO", "     MA", "     MT", "     MS", "     MG", "     PA", "     PB", "     PR", "     PE", "     PI", "     RJ", "     RN", "     RS", "     RO", "     RR", "     SC", "     SP", "     SE", "     TO", " ", " ", " ", " " }));
        estadoDen.setBorder(null);
        estadoDen.setForeground(new Color(123,0,0));
        estadoDen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estadoDenActionPerformed(evt);
            }
        });
        getContentPane().add(estadoDen);
        estadoDen.setBounds(470, 193, 100, 40);

        jLabel3.setFont(new java.awt.Font("Bahnschrift", 1, 11
        ));
        jLabel3.setText("Contato disponível caso necessário");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(460, 540, 230, 30);

        jLabel2.setFont(new java.awt.Font("Bahnschrift", 1, 11));
        jLabel2.setText("Declaro que a denuncia é verdadeira");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(460, 480, 230, 30);

        horaDen.setBackground(new java.awt.Color(244, 244, 244));
        horaDen.setBorder(null);
        horaDen.setHorizontalAlignment(horaDen.CENTER);
        horaDen.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        horaDen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horaDenActionPerformed(evt);
            }
        });
        getContentPane().add(horaDen);
        horaDen.setBounds(633, 352, 100, 23);

        infoDen.setBackground(new java.awt.Color(244, 244, 244));
        infoDen.setBackground(new java.awt.Color(0, 0, 0, 0));
        infoDen.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        infoDen.setForeground(new java.awt.Color(0, 0, 0));

        infoDen.addMouseListener(new java.awt.event.MouseAdapter() {
            private javax.swing.Timer timer;

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                if (timer !=null) {
                    timer.stop();
                }

                timer = new javax.swing.Timer(18, e -> {
                    int r = Math.max(123, infoDen.getForeground().getRed() - 10);
                    int g = Math.max(0, infoDen.getForeground().getGreen() - 10);
                    int b = Math.max(0, infoDen.getForeground().getBlue() - 10);
                    infoDen.setForeground(new java.awt.Color(r, g, b));
                    if (r <= 123 && g <= 0 && b <= 0) {
                        timer.stop();
                    }
                });
                timer.start();
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {

                if (timer != null) {
                    timer.stop();
                }
                // Timer para a animação de volta à cor original
                timer = new javax.swing.Timer(18, e -> {
                    int r = Math.min(0, infoDen.getForeground().getRed() + 10);
                    int g = Math.min(0, infoDen.getForeground().getGreen() + 10);
                    int b = Math.min(0, infoDen.getForeground().getBlue() + 10);
                    infoDen.setForeground(new java.awt.Color(r, g, b));
                    if (r >= 0 && g >= 0 && b >= 0) {
                        timer.stop();
                    }
                });
                timer.start();
            }
        });
        infoDen.setText("Mais detalhes para a denuncia");
        infoDen.setBorder(null);
        infoDen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoDenActionPerformed(evt);
            }
        });
        getContentPane().add(infoDen);
        infoDen.setBounds(540, 407, 280, 30);

        numeDen.setHorizontalAlignment(numeDen.CENTER);
        numeDen.setBackground(new java.awt.Color(244, 244, 244));
        numeDen.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        numeDen.setBorder(null);
        getContentPane().add(numeDen);
        numeDen.setBounds(772, 273, 120, 30);

        dataDen.setBackground(new java.awt.Color(244, 244, 244));
        dataDen.setHorizontalAlignment(dataDen.CENTER);
        dataDen.setBorder(null);
        dataDen.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        dataDen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataDenActionPerformed(evt);
            }
        });
        getContentPane().add(dataDen);
        dataDen.setBounds(463, 354, 130, 20);

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\OneDrive\\Documentos\\NetBeansProjects\\A3_Testes\\src\\main\\resources\\images\\TelaDenuncias.png")); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 960, 600);

        infoPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoPlusActionPerformed(evt);
            }
        });
        getContentPane().add(infoPlus);
        infoPlus.setBounds(840, 407, 30, 30);

        verdade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verdadeActionPerformed(evt);
            }
        });
        getContentPane().add(verdade);
        verdade.setBounds(690, 480, 30, 30);

        contato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contatoActionPerformed(evt);
            }
        });
        getContentPane().add(contato);
        contato.setBounds(690, 540, 30, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_confirmaActionPerformed

    private void DenunciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DenunciaActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_DenunciaActionPerformed

    private void HomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeActionPerformed
        // TODO add your handling code here:
        int x = this.getLocation().x;
        int y = this.getLocation().y;
        
        Home home = new Home();
        home.setLocation(x,y);
        home.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_HomeActionPerformed

    private void QueimadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QueimadasActionPerformed
        // TODO add your handling code here:
        int x = this.getLocation().x;
        int y = this.getLocation().y;
        
        Queimadas queimadas = new Queimadas();
        queimadas.setLocation(x, y);
        queimadas.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_QueimadasActionPerformed

    private void AboutUsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutUsActionPerformed
        // TODO add your handling code here:
        int x = this.getLocation().x;
        int y = this.getLocation().y;
        
        SobreNos sobreNos = new SobreNos();
        sobreNos.setLocation(x,y);
        sobreNos.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_AboutUsActionPerformed

    private void PerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PerfilActionPerformed
        // TODO add your handling code here:
        int x = this.getLocation().x;
        int y = this.getLocation().y;
        
        Perfil perfil = new Perfil();
        perfil.setLocation(x, y);
        perfil.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_PerfilActionPerformed

    private void EnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnviarActionPerformed
        // TODO add your handling code here:

        String estadoden = (String) estadoDen.getSelectedItem();
        System.out.println(estadoden);
        String cidadeden = cidadeDen.getText();
        String endeden = enderecoDen.getText();
        String numeden = numeDen.getText();
        String dataden = dataDen.getText();
        String horaden = horaDen.getText();
        String gravden = (String) gravDen.getSelectedItem();
        
        if (confirma.isSelected()) {
        
            if ("".equals(cidadeden) || "".equals(endeden) || "".equals(dataden) || "".equals(horaden) | "".equals(numeden)) {
                JOptionPane.showMessageDialog(null, "Informações obrigatórias não foram preenchidas!");

            }else {

                Denuncias den = new Denuncias();
                den.setEstado(estadoden);
                den.setCidade(cidadeden);
                den.setRua(endeden);
                den.setNumero(numeden);
                den.setData(dataden);
                den.setHora(horaden);
                den.setGravidade(gravden);

                try {
                    if (den.CriarDen()) {
                        JOptionPane.showMessageDialog(null, "Denuncia enviada com sucesso!");
                        cidadeDen.setText("");
                        enderecoDen.setText("");
                        numeDen.setText("");
                        dataDen.setText("");
                        horaDen.setText("");

                    }else {
                        JOptionPane.showMessageDialog(null, "Informações incorretas ou faltando!");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Denuncia.class.getName()).log(Level.SEVERE, null, ex);
                }

                ConnectionFactory cf = new ConnectionFactory();
                cf.obtemConexao();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Precisamos da confirmação de que as informações são verdadeiras!");
        }
        
    }//GEN-LAST:event_EnviarActionPerformed

    private void verdadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verdadeActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Considerando o processo realizado com as autoridades," + "\n" + "precisamos da confirmação da veracidade das informações.");
    }//GEN-LAST:event_verdadeActionPerformed

    private void contatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contatoActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Você não é obrigado a concordar com essa cláusula, " + "\n" + "mas o seu contato pode nos ajudar a identificar melhor o problema ambiental!");
    }//GEN-LAST:event_contatoActionPerformed

    private void infoDenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoDenActionPerformed
        // TODO add your handling code here:
        String info = JOptionPane.showInputDialog("Coloque aqui todas as informações adicionais que você tem sobre a queimada!");
        
    }//GEN-LAST:event_infoDenActionPerformed

    private void infoPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoPlusActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Nesse campo não obriigatório, gostariamos de saber todos os" + "\n" + "           detalhes que você tem sobre a queimada.");
    }//GEN-LAST:event_infoPlusActionPerformed

    private void estadoDenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estadoDenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_estadoDenActionPerformed

    private void dataDenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataDenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataDenActionPerformed

    private void horaDenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horaDenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_horaDenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Denuncia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Denuncia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Denuncia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Denuncia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Denuncia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AboutUs;
    private javax.swing.JButton Denuncia;
    private javax.swing.JButton Enviar;
    private javax.swing.JButton Home;
    private javax.swing.JButton Perfil;
    private javax.swing.JButton Queimadas;
    private javax.swing.JTextField cidadeDen;
    private javax.swing.JCheckBox confirma;
    private javax.swing.JButton contato;
    private javax.swing.JFormattedTextField dataDen;
    private javax.swing.JTextField enderecoDen;
    private javax.swing.JComboBox<String> estadoDen;
    private javax.swing.JComboBox<String> gravDen;
    private javax.swing.JFormattedTextField horaDen;
    private javax.swing.JButton infoDen;
    private javax.swing.JButton infoPlus;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField numeDen;
    private javax.swing.JButton verdade;
    // End of variables declaration//GEN-END:variables
}
